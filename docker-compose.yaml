version: '3.8'

services:
  web:
    build: ./aiohttp
    restart: always
    command: gunicorn --workers=${GUNICORN_WORKERS} --chdir generated openapi_server.app_factory:app_factory --bind 0.0.0.0:8000 --worker-class aiohttp.GunicornWebWorker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - dramatiq_volume:/code/dramatiq/dramatiq_tasks
      - aiohttp_volume:/code/generated
    expose:
      - 8000
    depends_on:
      - dramatiq
      - db
    env_file:
      - .env.prod
      - .env.prod.db
  nginx:
    build: ./nginx
    restart: always
    ports:
      - 80:80
    depends_on:
      - web
  rabbitmq:
    image: rabbitmq:3.9
    ports:
      - 5672:5672
  dramatiq:
    build: ./dramatiq
    restart: always
    command: dramatiq dramatiq_tasks.tasks #--log-file /tmp/dramatiq.log
    # command: dramatiq-gevent dramatiq_tasks.tasks -p ${DRAMATIQ_PROCESSES} -t ${DRAMATIQ_THREADS}
    depends_on:
      - rabbitmq
      - db
    volumes:
      - dramatiq_volume:/code/dramatiq_tasks
    env_file:
      - .env.prod
      - .env.prod.db
  scheduler:
    build: ./dramatiq
    restart: always
    command: python -m dramatiq_tasks.tasks
    depends_on:
      - dramatiq
    volumes:
      - dramatiq_volume:/code/dramatiq_tasks
    env_file:
      - .env.prod
      - .env.prod.db
  db:
    image: postgres:14
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.prod.db

volumes:
  dramatiq_volume:
  aiohttp_volume:
  postgres_data:
